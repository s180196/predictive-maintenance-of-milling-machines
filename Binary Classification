{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["**MOUNTING DRIVE**"],"metadata":{"id":"XnaQ_Q9AcAhQ"}},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7gQ-BFvjJ1cl","outputId":"755dfd1a-afad-4f34-bd27-818d1f1719b6","executionInfo":{"status":"ok","timestamp":1689571065123,"user_tz":-330,"elapsed":26221,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"markdown","source":["**IMPORTING LIBRARIES**"],"metadata":{"id":"R8EAGH-Rb_8F"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","import matplotlib\n","import pickle"],"metadata":{"id":"ZNXAbTE4OD1T","executionInfo":{"status":"ok","timestamp":1689571093829,"user_tz":-330,"elapsed":1263,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}}},"execution_count":3,"outputs":[]},{"cell_type":"markdown","source":["**IMPORTING DEEP LEARNING MODULES**"],"metadata":{"id":"d9FKUcBbcPtM"}},{"cell_type":"code","source":["import tensorflow as tf\n","from sklearn.model_selection import train_test_split\n","from tensorflow.keras.layers import Input, Dense, LSTM,Conv2D,Conv1D,Flatten,MaxPooling2D\n","from keras.models import Model"],"metadata":{"id":"7_uvKW6nLnh1","executionInfo":{"status":"ok","timestamp":1689571127494,"user_tz":-330,"elapsed":4741,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}}},"execution_count":4,"outputs":[]},{"cell_type":"markdown","source":["**IMPORTING EVALUATION METRICS**"],"metadata":{"id":"EzTo2swgcXCe"}},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix, accuracy_score\n","from sklearn.metrics import classification_report"],"metadata":{"id":"lU_Xp95mcd4x","executionInfo":{"status":"ok","timestamp":1689571173148,"user_tz":-330,"elapsed":394,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}}},"execution_count":5,"outputs":[]},{"cell_type":"markdown","source":["**LOADING DATASET**"],"metadata":{"id":"0gK49PKfQZAu"}},{"cell_type":"markdown","source":["Path to the Source Folder"],"metadata":{"id":"E_GkVU6_chlo"}},{"cell_type":"code","source":["cd /content/drive/MyDrive/Mini1/"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KYIXrUwL6zU2","executionInfo":{"status":"ok","timestamp":1689571262442,"user_tz":-330,"elapsed":476,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}},"outputId":"7256cbfb-ddea-4e75-9a7b-a2dc213fef3b"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/Mini1\n"]}]},{"cell_type":"markdown","source":["**Reading Dataset**"],"metadata":{"id":"DxC5LN_NcobT"}},{"cell_type":"code","source":["data = pd.read_csv('Machine data1.csv')"],"metadata":{"id":"wrBFdoQ8py5Z","executionInfo":{"status":"ok","timestamp":1689571275645,"user_tz":-330,"elapsed":1223,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}}},"execution_count":7,"outputs":[]},{"cell_type":"markdown","source":["**PREPROCESSING AND CLEANING THE DATASET**"],"metadata":{"id":"TuGTpJReQdjD"}},{"cell_type":"code","source":["data.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aigbQctrKtd7","outputId":"88f2abec-7cef-413e-cde3-6ce3e56e738b","executionInfo":{"status":"ok","timestamp":1689571282915,"user_tz":-330,"elapsed":412,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}}},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['ID', 'Machine ID', 'Machine_Type', 'AT(Air Temperature)',\n","       'PT(Process Temperature)', 'RS(Rotation Speed(per min))', 'Torque',\n","       'Tool wear', 'Device Condition'],\n","      dtype='object')"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":267},"id":"A2pxSJIHOT0m","executionInfo":{"status":"ok","timestamp":1689571306902,"user_tz":-330,"elapsed":537,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}},"outputId":"10314fc8-2dd9-486e-d620-c5bb86dce576"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   ID Machine ID Machine_Type  AT(Air Temperature)  PT(Process Temperature)  \\\n","0   1     M14860            M                298.1                    308.6   \n","1   2     L47181            L                298.2                    308.7   \n","2   3     L47182            L                298.1                    308.5   \n","3   4     L47183            L                298.2                    308.6   \n","4   5     L47184            L                298.2                    308.7   \n","\n","   RS(Rotation Speed(per min))  Torque  Tool wear  Device Condition  \n","0                         1551    42.8          0                 0  \n","1                         1408    46.3          3                 0  \n","2                         1498    49.4          5                 0  \n","3                         1433    39.5          7                 0  \n","4                         1408    40.0          9                 0  "],"text/html":["\n","\n","  <div id=\"df-80eb981e-461e-4320-90a8-8ab41bd71e27\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>Machine ID</th>\n","      <th>Machine_Type</th>\n","      <th>AT(Air Temperature)</th>\n","      <th>PT(Process Temperature)</th>\n","      <th>RS(Rotation Speed(per min))</th>\n","      <th>Torque</th>\n","      <th>Tool wear</th>\n","      <th>Device Condition</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>M14860</td>\n","      <td>M</td>\n","      <td>298.1</td>\n","      <td>308.6</td>\n","      <td>1551</td>\n","      <td>42.8</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>L47181</td>\n","      <td>L</td>\n","      <td>298.2</td>\n","      <td>308.7</td>\n","      <td>1408</td>\n","      <td>46.3</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>L47182</td>\n","      <td>L</td>\n","      <td>298.1</td>\n","      <td>308.5</td>\n","      <td>1498</td>\n","      <td>49.4</td>\n","      <td>5</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>L47183</td>\n","      <td>L</td>\n","      <td>298.2</td>\n","      <td>308.6</td>\n","      <td>1433</td>\n","      <td>39.5</td>\n","      <td>7</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>L47184</td>\n","      <td>L</td>\n","      <td>298.2</td>\n","      <td>308.7</td>\n","      <td>1408</td>\n","      <td>40.0</td>\n","      <td>9</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-80eb981e-461e-4320-90a8-8ab41bd71e27')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-cc3a2bf4-c45f-43b2-9afa-82fea954e39a\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cc3a2bf4-c45f-43b2-9afa-82fea954e39a')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-cc3a2bf4-c45f-43b2-9afa-82fea954e39a button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-80eb981e-461e-4320-90a8-8ab41bd71e27 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-80eb981e-461e-4320-90a8-8ab41bd71e27');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vFXLlnaYOWXJ","executionInfo":{"status":"ok","timestamp":1689571310872,"user_tz":-330,"elapsed":425,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}},"outputId":"5daac7c0-f080-4f5c-c722-4672b92bbc89"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 10000 entries, 0 to 9999\n","Data columns (total 9 columns):\n"," #   Column                       Non-Null Count  Dtype  \n","---  ------                       --------------  -----  \n"," 0   ID                           10000 non-null  int64  \n"," 1   Machine ID                   10000 non-null  object \n"," 2   Machine_Type                 10000 non-null  object \n"," 3   AT(Air Temperature)          10000 non-null  float64\n"," 4   PT(Process Temperature)      10000 non-null  float64\n"," 5   RS(Rotation Speed(per min))  10000 non-null  int64  \n"," 6   Torque                       10000 non-null  float64\n"," 7   Tool wear                    10000 non-null  int64  \n"," 8   Device Condition             10000 non-null  int64  \n","dtypes: float64(3), int64(4), object(2)\n","memory usage: 703.2+ KB\n"]}]},{"cell_type":"code","source":["data.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":361},"id":"UBpGMsepOXhT","executionInfo":{"status":"ok","timestamp":1689571320184,"user_tz":-330,"elapsed":614,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}},"outputId":"879cc1a1-6a13-4c95-a14f-1ffa7370afcf"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                ID  AT(Air Temperature)  PT(Process Temperature)  \\\n","count  10000.00000         10000.000000             10000.000000   \n","mean    5000.50000           300.004930               310.005560   \n","std     2886.89568             2.000259                 1.483734   \n","min        1.00000           295.300000               305.700000   \n","25%     2500.75000           298.300000               308.800000   \n","50%     5000.50000           300.100000               310.100000   \n","75%     7500.25000           301.500000               311.100000   \n","max    10000.00000           304.500000               313.800000   \n","\n","       RS(Rotation Speed(per min))        Torque     Tool wear  \\\n","count                 10000.000000  10000.000000  10000.000000   \n","mean                   1538.776100     39.986910    107.951000   \n","std                     179.284096      9.968934     63.654147   \n","min                    1168.000000      3.800000      0.000000   \n","25%                    1423.000000     33.200000     53.000000   \n","50%                    1503.000000     40.100000    108.000000   \n","75%                    1612.000000     46.800000    162.000000   \n","max                    2886.000000     76.600000    253.000000   \n","\n","       Device Condition  \n","count      10000.000000  \n","mean           0.033900  \n","std            0.180981  \n","min            0.000000  \n","25%            0.000000  \n","50%            0.000000  \n","75%            0.000000  \n","max            1.000000  "],"text/html":["\n","\n","  <div id=\"df-08a694d6-efe6-454e-8f1b-aedee1a9decc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>AT(Air Temperature)</th>\n","      <th>PT(Process Temperature)</th>\n","      <th>RS(Rotation Speed(per min))</th>\n","      <th>Torque</th>\n","      <th>Tool wear</th>\n","      <th>Device Condition</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>10000.00000</td>\n","      <td>10000.000000</td>\n","      <td>10000.000000</td>\n","      <td>10000.000000</td>\n","      <td>10000.000000</td>\n","      <td>10000.000000</td>\n","      <td>10000.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>5000.50000</td>\n","      <td>300.004930</td>\n","      <td>310.005560</td>\n","      <td>1538.776100</td>\n","      <td>39.986910</td>\n","      <td>107.951000</td>\n","      <td>0.033900</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>2886.89568</td>\n","      <td>2.000259</td>\n","      <td>1.483734</td>\n","      <td>179.284096</td>\n","      <td>9.968934</td>\n","      <td>63.654147</td>\n","      <td>0.180981</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.00000</td>\n","      <td>295.300000</td>\n","      <td>305.700000</td>\n","      <td>1168.000000</td>\n","      <td>3.800000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2500.75000</td>\n","      <td>298.300000</td>\n","      <td>308.800000</td>\n","      <td>1423.000000</td>\n","      <td>33.200000</td>\n","      <td>53.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>5000.50000</td>\n","      <td>300.100000</td>\n","      <td>310.100000</td>\n","      <td>1503.000000</td>\n","      <td>40.100000</td>\n","      <td>108.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>7500.25000</td>\n","      <td>301.500000</td>\n","      <td>311.100000</td>\n","      <td>1612.000000</td>\n","      <td>46.800000</td>\n","      <td>162.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>10000.00000</td>\n","      <td>304.500000</td>\n","      <td>313.800000</td>\n","      <td>2886.000000</td>\n","      <td>76.600000</td>\n","      <td>253.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-08a694d6-efe6-454e-8f1b-aedee1a9decc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-e173223a-2cfc-492f-9036-a462c5719a0d\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e173223a-2cfc-492f-9036-a462c5719a0d')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-e173223a-2cfc-492f-9036-a462c5719a0d button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-08a694d6-efe6-454e-8f1b-aedee1a9decc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-08a694d6-efe6-454e-8f1b-aedee1a9decc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["**FILLING MISSING VALUES WITH COLUMN MEAN VALUE**"],"metadata":{"id":"x93TaC1HWkq2"}},{"cell_type":"code","source":["data = data.fillna(data.mean())"],"metadata":{"id":"UfOCD8dpWhXo","executionInfo":{"status":"ok","timestamp":1689571336249,"user_tz":-330,"elapsed":477,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"8e25e6f2-d0ba-497e-bfd3-0b33a82ac0d6"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-12-369509bb1069>:1: FutureWarning: The default value of numeric_only in DataFrame.mean is deprecated. In a future version, it will default to False. In addition, specifying 'numeric_only=None' is deprecated. Select only valid columns or specify the value of numeric_only to silence this warning.\n","  data = data.fillna(data.mean())\n"]}]},{"cell_type":"markdown","source":["**DROPING UNECESSARY COLUMNS**"],"metadata":{"id":"pNXgOc8QQvSm"}},{"cell_type":"code","source":["data.drop(['ID', 'Machine ID', 'Machine_Type'],axis=1,inplace=True)\n","data.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kah2beB9pz2R","outputId":"0cbef098-22cd-49ad-e880-3764891832cd","executionInfo":{"status":"ok","timestamp":1689571353889,"user_tz":-330,"elapsed":415,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}}},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['AT(Air Temperature)', 'PT(Process Temperature)',\n","       'RS(Rotation Speed(per min))', 'Torque', 'Tool wear',\n","       'Device Condition'],\n","      dtype='object')"]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["**BALANCING DATASET TO EQUAL SIZE**"],"metadata":{"id":"AoQ_-NcVQ0df"}},{"cell_type":"code","source":["j=0\n","for i in range(len(data)):\n","  if(data.at[i,'Device Condition']== 0 and j<9200):\n","      data=data.drop(i)\n","      j=j+1\n","data[data['Device Condition']==0].count()"],"metadata":{"id":"teWucPlprOrB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1689571401527,"user_tz":-330,"elapsed":7206,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}},"outputId":"15f880bf-2f7f-4e72-a0b0-4f7af2bf61be"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["AT(Air Temperature)            461\n","PT(Process Temperature)        461\n","RS(Rotation Speed(per min))    461\n","Torque                         461\n","Tool wear                      461\n","Device Condition               461\n","dtype: int64"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["data = data.select_dtypes(include=[np.number]).astype(float)"],"metadata":{"id":"kkSVFei4Oare","executionInfo":{"status":"ok","timestamp":1689571423722,"user_tz":-330,"elapsed":490,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["df_numeric = data.select_dtypes(include=[np.number])\n","df_numeric.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":344},"id":"w792cGNiOj12","executionInfo":{"status":"ok","timestamp":1689571449530,"user_tz":-330,"elapsed":413,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}},"outputId":"cdea4365-c3d9-4723-f1ee-bcbcb32a48ee"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       AT(Air Temperature)  PT(Process Temperature)  \\\n","count           800.000000                800.00000   \n","mean            299.695875                309.90275   \n","std               1.715327                  1.13129   \n","min             295.600000                306.10000   \n","25%             298.600000                309.20000   \n","50%             299.000000                310.00000   \n","75%             300.700000                310.60000   \n","max             304.400000                313.70000   \n","\n","       RS(Rotation Speed(per min))      Torque   Tool wear  Device Condition  \n","count                   800.000000  800.000000  800.000000        800.000000  \n","mean                   1520.736250   44.115000  123.866250          0.423750  \n","std                     282.074683   13.871833   69.588948          0.494461  \n","min                    1181.000000    3.800000    0.000000          0.000000  \n","25%                    1363.000000   35.000000   65.000000          0.000000  \n","50%                    1439.000000   45.150000  126.500000          0.000000  \n","75%                    1577.000000   53.925000  188.250000          1.000000  \n","max                    2886.000000   76.600000  253.000000          1.000000  "],"text/html":["\n","\n","  <div id=\"df-94b03905-922b-4c86-9dd0-6a7a2e09fc93\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>AT(Air Temperature)</th>\n","      <th>PT(Process Temperature)</th>\n","      <th>RS(Rotation Speed(per min))</th>\n","      <th>Torque</th>\n","      <th>Tool wear</th>\n","      <th>Device Condition</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>800.000000</td>\n","      <td>800.00000</td>\n","      <td>800.000000</td>\n","      <td>800.000000</td>\n","      <td>800.000000</td>\n","      <td>800.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>299.695875</td>\n","      <td>309.90275</td>\n","      <td>1520.736250</td>\n","      <td>44.115000</td>\n","      <td>123.866250</td>\n","      <td>0.423750</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>1.715327</td>\n","      <td>1.13129</td>\n","      <td>282.074683</td>\n","      <td>13.871833</td>\n","      <td>69.588948</td>\n","      <td>0.494461</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>295.600000</td>\n","      <td>306.10000</td>\n","      <td>1181.000000</td>\n","      <td>3.800000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>298.600000</td>\n","      <td>309.20000</td>\n","      <td>1363.000000</td>\n","      <td>35.000000</td>\n","      <td>65.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>299.000000</td>\n","      <td>310.00000</td>\n","      <td>1439.000000</td>\n","      <td>45.150000</td>\n","      <td>126.500000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>300.700000</td>\n","      <td>310.60000</td>\n","      <td>1577.000000</td>\n","      <td>53.925000</td>\n","      <td>188.250000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>304.400000</td>\n","      <td>313.70000</td>\n","      <td>2886.000000</td>\n","      <td>76.600000</td>\n","      <td>253.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-94b03905-922b-4c86-9dd0-6a7a2e09fc93')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-63fd6961-bd07-43a6-a296-125d0f505e58\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-63fd6961-bd07-43a6-a296-125d0f505e58')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-63fd6961-bd07-43a6-a296-125d0f505e58 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-94b03905-922b-4c86-9dd0-6a7a2e09fc93 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-94b03905-922b-4c86-9dd0-6a7a2e09fc93');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["data[\"Device Condition\"].dtype"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jPitzXHsqs1j","outputId":"c53275cd-2372-4c02-b4f4-026ae36aef57","executionInfo":{"status":"ok","timestamp":1689571463055,"user_tz":-330,"elapsed":503,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}}},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype('float64')"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["data['Device Condition'] = data['Device Condition'].astype(int)"],"metadata":{"id":"-EKQD8Y-RvON","executionInfo":{"status":"ok","timestamp":1689571471531,"user_tz":-330,"elapsed":489,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["data[\"Device Condition\"].dtype"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j85ZurvIR4dg","executionInfo":{"status":"ok","timestamp":1689571475952,"user_tz":-330,"elapsed":413,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}},"outputId":"d1b5b7e7-2425-4367-8f43-f8e338f0a238"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype('int64')"]},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","source":["**COORELATION BETWEEN FEATURES IN THE DATASET**"],"metadata":{"id":"w3rx8c6DSObO"}},{"cell_type":"code","source":["#Coorelation between features\n","plt.figure(figsize=(12,10))\n","cor = data.corr()\n","sns.heatmap(cor, annot=True, cmap=plt.cm.CMRmap_r)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":930},"id":"yzal7bcwP4gw","executionInfo":{"status":"ok","timestamp":1689571484650,"user_tz":-330,"elapsed":1184,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}},"outputId":"deee6d1f-4d8b-4092-eb2d-aff483e08bf7"},"execution_count":20,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x1000 with 2 Axes>"],"image/png":"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TUeOHJHValWdOnW0cuVKoyMCQIHFrkAAHGrZsmX69ddfVapUKZv28PBwHT161KBUyCu7du3S/Pnzc7QHBQXp7NmzBiSCoxUqVEiHDh1S0aJFcxwLCgpSixYt1KJFC73yyitaunSpjh07RmHlNjFu3LgbHh87dmw+JUF+GD16tIYPH67XXntNPj4++u677xQUFKRu3bqpXbt2RsdDHkhMTNSnn36qqKgoSVLVqlXVu3dv+fn5GZwMcD4UVgA41KVLl+Tt7Z2jPSEhgXUYbkP+/v6Ki4vLsZvE9u3bVbJkSYNSwZEmTZp0031583V7+f77722+Tk9P1+HDh+Xq6qry5ctTWLnNREVF6csvv5Qkubq66vLlyypcuLDGjRunBx98UM8884zBCeFIW7ZsUdu2beXl5aV69epJypruNWHCBC1btkx16tQxOCHgXCisAHCoxo0ba+7cuRo/frykrEXRLBaLXn/9dTVv3tzgdHC0Ll26aOTIkfr222+z7/W6des0fPhwde/e3eh4AP6D7du352hLSkpSz5499dBDDxmQCHmpUKFC2euqlChRQjExMdkLkDMC8fYzZMgQdezYUR9//LFcXbPeEmZkZKhv3756/vnn9ccffxicEHAurLECwKF2796tli1bZs/H7tixo/bs2aOEhAStW7dO5cuXNzoiHCgtLU0DBgzQ7NmzlZmZKVdXV2VmZqpr166aPXu2XFxcjI4IBzp16pSGDx+uFStW6PTp0/rnrxDsInFn2LVrlx544AEdOXLE6ChwoE6dOum+++5Tv379NHz4cC1atEg9e/bUwoULVaRIEf32229GR4QDeXl5afv27apUqZJN+969exUREaGUlBSDkgHOiRErAByqWrVq2r9/v9555x35+PgoOTlZnTt31oABA1SiRAmj48GBrFar4uPj9dZbb2ns2LHatWuXkpOTVbt2bYWHhxsdD3mgZ8+eio2N1ZgxY1SiRAm2UL9DXbhwQRcuXDA6Bhxs2rRpSk5OliS99tprSk5O1tdff63w8HB2BLoN+fr6KjY2Nkdh5dixY/Lx8TEoFeC8GLECwGHS09PVrl07ffDBB7yxvgNYLBZ5enpqz5493O87hI+Pj9asWaNatWoZHQX54K233rL52mq1Ki4uTp9//rmaNm2a68LVAJzDoEGD9P3332vq1Klq0KCBJGndunUaMWKE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Buufzp07l+PTbTi/L7/8UsuWLZOnp6dWrVplc+9NJhOFldvM4cOHjY6AfLRjxw4lJibqjz/+0OrVq/Xiiy9q7969qlWrlpo3b64JEyYYHREACixGrABwiL/n6nbq1Elz5syRn59f9rHMzEytWLFCy5cvV3R0tFER4UB/L1K8aNEitWvXTh4eHtnHMjMztXPnTlWsWFFLly41KiLyQHBwsAYNGqRRo0bdcBg5AOd27tw5rVq1SosWLdKXX37J4rW3ibfeeuum+1IoB24NI1YAOESnTp0kZX1q3aNHD5tjbm5uKleunN58800DkiEv/F04s1qt8vHxkZeXV/Yxd3d33XvvverXr59R8ZBH0tLS9Pjjj1NUuYPExMRoxowZioqKkiRVqVJFgwcPVvny5Q1OBkdbuHBh9qK1e/fuVUBAgBo1aqQ333xTTZs2NToeHGD69Ok2X585c0YpKSny9/eXlDVt29vbW0FBQRRWgFvEiBUADhUaGqrNmzerWLFiRkdBPnjttdc0fPhwpv3cIYYMGaLAwEC9+OKLRkdBPvj111/VsWNH1apVSw0bNpQkrVu3TpGRkVq8eLFat25tcEI4UlBQkJo0aZK9cG316tWNjoQ8NH/+fL333nv69NNPVbFiRUlSdHS0+vXrp6efflrdunUzOCHgXCisAACAmzJo0CDNnTtXNWvWVI0aNXIsXjtt2jSDkiEv1K5dW23bttXkyZNt2keNGqVly5Zp27ZtBiUD8F+VL19eCxYsUO3atW3at27dqkceeYQ1loBbxFQgAA536dIlrV69WrGxsUpLS7M5xtDS28+CBQv0zTff5Hq/eeN1e9m1a1f2L+G7d++2OcaWrLefqKgoffPNNznae/furRkzZuR/IAAOExcXp4yMjBztmZmZOnXqlAGJAOdGYQWAQ23fvl0dOnRQSkqKLl26pICAAJ09e5Y5u7ept956Sy+99JJ69uypRYsWqVevXoqJidHmzZs1YMAAo+PBwX7//XejIyAfBQYGaseOHQoPD7dp37FjR44t1gE4l5YtW+rpp5/WJ598ojp16kjKGq3yzDPPqFWrVganA5wPq88BcKghQ4bogQce0Pnz5+Xl5aU///xTR48eVd26dTV16lSj48HB3nvvPX300Ud6++235e7urhdeeEHLly/XoEGDdOHCBaPjAbDDuHHjlJKSon79+ql///6aMmWK1qxZozVr1mjy5Ml6+umnWZwacHKfffaZgoODFRERIQ8PD3l4eKhevXoqXry4PvnkE6PjAU6HNVYAOJS/v782btyoihUryt/fXxs2bFDlypW1ceNG9ejRQ/v27TM6IhzI29tbUVFRKlu2rIKCgrR8+XLVrFlTBw4c0L333qtz584ZHRHALXJxcVFcXJwCAwM1Y8YMvfnmmzp58qQkKSQkRCNGjNCgQYOY/gXcBvbv35/9u1mlSpV01113GZwIcE5MBQLgUG5ubtlbsQYFBSk2NlaVK1eWn5+fjh07ZnA6OFpwcLASEhJUtmxZlSlTRn/++adq1qypw4cPi7o94Jz+/t41mUwaMmSIhgwZoosXL0qSfHx8jIwGwMHuuusuiimAA1BYAeBQtWvX1ubNmxUeHq6mTZtq7NixOnv2rD7//HNVq1bN6HhwsBYtWujHH39U7dq11atXLw0ZMkQLFizQli1b1LlzZ6PjAbDTP0ejUFC5Pd3Kz+mFCxfmYRLkt8zMTM2ePVsrVqzQ6dOnZbFYbI6vXLnSoGSAc2IqEACH2rJliy5evKjmzZvr9OnT6t69u9avX6/w8HB99tlnqlmzptER4UAWi0UWi0Wurll1+q+++ir7fj/99NNyd3c3OCEcJT09XU8//bTGjBmj0NBQo+MgD5nNZvn5+f3rVJ+EhIR8SoS80qtXr5vuO2vWrDxMgvz23HPPafbs2brvvvtUokSJHN/v06dPNygZ4JworABwGKvVqmPHjikoKEienp5Gx0Eey8jI0MSJE9W7d2+VKlXK6DjIB35+ftqxYweFlduc2WzWjBkz5Ofnd8N+PXr0yKdEABytWLFimjt3rjp06GB0FOC2QGEFgMNYLBZ5enpqz549ObbnxO2pcOHC2r17t8qVK2d0FOSDHj16qFatWhoyZIjRUZCHzGaz4uPj2VL5DnXmzBlFR0dLkipWrKjAwECDEyEvhISEaNWqVayvAjgIa6wAcBiz2azw8HCdO3eOwsodomXLllq9ejWFlTtEeHi4xo0bp3Xr1qlu3boqVKiQzfFBgwYZlAyOxG4/d6ZLly5p4MCBmjt3bvZ6Gy4uLurevbvefvtteXt7G5wQjjRs2DDNnDlT77zzDt/zgAMwYgWAQy1evFivv/663n//fRarvQN88MEHeu2119StW7dc32h37NjRoGTICzeaAmQymXTo0KF8TIO8woiVO9PTTz+t3377Te+8844aNmwoSVq7dq0GDRqk1q1b6/333zc4IRzpoYce0u+//66AgABVrVpVbm5uNsdZrBi4NRRWADhUkSJFlJKSooyMDLm7u8vLy8vmOIsd3l7+3lo7NyaTSZmZmfmYBgBgr2LFimnBggVq1qyZTfvvv/+uxx57TGfOnDEmGPLEvy1czGLFwK1hKhAAh5oxY4bREZCP/rk9I+4MaWlpOnz4sMqXL5+9IxQA55aSkqLixYvnaA8KClJKSooBiZCXKJwAjsWIFQCAQ1y5coXdoG5zKSkpGjhwoObMmSNJ2r9/v8LCwjRw4ECVLFlSo0aNMjghAHu1bNlSRYsW1dy5c7N/ll++fFk9evRQQkKCfvvtN4MTIi+wWDHgGNcfww0AdoqJidHLL7+sJ554QqdPn5Yk/fLLL9qzZ4/ByeBomZmZGj9+vEqWLKnChQtnr7ExZswYffrppwang6ONHj1akZGRWrVqlU0RrVWrVvr6668NTAbgv5o5c6bWrVunUqVKqWXLlmrZsqVKly6t9evXa+bMmUbHg4NdunRJvXv3VokSJdSkSRM1adJEISEh6tOnDyOUADtQWAHgUKtXr1b16tW1ceNGLVy4UMnJyZKkyMhIvfLKKwang6NNmDBBs2fP1uuvvy53d/fs9mrVqumTTz4xMBnywg8//KB33nlHjRo1stlFomrVqoqJiTEwGYD/qlq1ajpw4IAmTZqkWrVqqVatWpo8ebIOHDigqlWrGh0PDjZ06FCtXr1aixcvVmJiohITE7Vo0SKtXr1aw4YNMzoe4HSYCgTAoerXr69HH31UQ4cOlY+PjyIjIxUWFqZNmzapc+fOOn78uNER4UAVKlTQhx9+qJYtW9rc73379ql+/fo6f/680RHhQN7e3tq9e7fCwsJs7ndkZKSaNGmiCxcuGB0RAHATWKwYcCxGrABwqF27dumhhx7K0R4UFKSzZ88akAh56cSJE6pQoUKOdovFovT0dAMSIS9FRETo559/zv7671Ern3zyierXr29ULAAOEhMTo4EDB6pVq1Zq1aqVBg8ezGi02xSLFQOORWEFgEP5+/srLi4uR/v27dtVsmRJAxIhL1WpUkVr1qzJ0b5gwQLVrl3bgETISxMnTtSLL76oZ555RhkZGZo5c6batGmjWbNmacKECUbHA/Af/Prrr6pSpYo2bdqkGjVqqEaNGvrzzz9VtWpVLV++3Oh4cLD69evrlVde0ZUrV7LbLl++rNdee41COWAH9kgE4FBdunTRyJEj9e2338pkMslisWjdunUaPny4unfvbnQ8ONjYsWPVo0cPnThxQhaLRQsXLlR0dLTmzp2rn376yeh4cLBGjRppx44dmjx5sqpXr65ly5apTp062rBhg6pXr250PAD/wahRozRkyBBNnjw5R/vIkSPVunVrg5IhL8ycOVNt27ZVqVKlVLNmTUlZ6+F5enrq119/NTgd4HxYYwWAQ6WlpWnAgAGaPXu2MjMz5erqqszMTHXt2lWzZ8+Wi4uL0RHhYGvWrNG4ceMUGRmp5ORk1alTR2PHjlWbNm2MjgYAuEmenp7atWuXwsPDbdr379+vGjVq2IxswO0hJSVF8+bN0759+yRJlStXVrdu3eTl5WVwMsD5UFgBkCdiY2O1e/duJScnq3bt2jl+UQPgnDIzM/X9998rKipKUtZ0sAcffFCurgyCBZxZ6dKlNW3aND366KM27d98842GDx+u2NhYg5IBQMHHb0EA8kSZMmVUunRpSbLZlhW3py1btti80a5bt67BiZAX9uzZo44dOyo+Pl4VK1aUJE2ZMkWBgYFavHixqlWrZnBCALdq3LhxGj58uPr166f+/fvr0KFDatCggSRp3bp1mjJlioYOHWpwSjjK1q1bNXz4cC1atEi+vr42xy5cuKBOnTppxowZ2dODANwcRqwAcLhPP/1U06dP14EDByRJ4eHhev7559W3b1+Dk8HRjh8/rieeeELr1q2Tv7+/JCkxMVENGjTQV199pVKlShkbEA5Vv359BQYGas6cOSpSpIgk6fz58+rZs6fOnDmj9evXG5wQwK1ycXFRXFycAgMDNWPGDL355ps6efKkJCkkJEQjRozQoEGD+JDkNtG1a1dVrlxZY8aMyfX4xIkTtXfvXn3xxRf5nAxwbhRWADjU2LFjNW3aNA0cODB7VfkNGzbonXfe0ZAhQzRu3DiDE8KR2rVrp8TERM2ZMyd7BEN0dLR69eolX19fLV261OCEcCQvLy9t2bJFVatWtWnfvXu37r77bl2+fNmgZADsZTabFR8fr6CgoOy2ixcvSpJ8fHyMioU8Ur58eX3//feqUaNGrsd37dqlBx98UIcOHcrnZIBzYyoQAId6//339fHHH+uJJ57IbuvYsaNq1KihgQMHUli5zaxevVrr16/PLqpIUsWKFfX222+rcePGBiZDXrjrrrt06tSpHIWV06dPq0KFCgalAvBf/XM0CgWV29eJEydueH8LFy6suLi4fEwE3B4orABwqPT0dEVERORor1u3rjIyMgxIhLxUunRppaen52jPzMxUSEiIAYmQlyZNmqRBgwbp1Vdf1b333itJ+vPPPzVu3DhNmTJFSUlJ2X3/OXcfQMF11113/etUn4SEhHxKg7wUGBio6OhohYaG5np83759KlasWD6nApwfU4EAONTAgQPl5uamadOm2bQPHz5cly9f1rvvvmtQMuSFRYsWaeLEiXr33XezC2pbtmzRwIEDNXLkSHXq1MnYgHAos9mc/ee/34T9/WvEtV+bTCZlZmbmf0AAt8xsNmvGjBny8/O7Yb8ePXrkUyLkpV69eungwYNas2ZNjmNWq1WNGzdWeHi4Zs2aZUA6wHlRWAHgUAMHDtTcuXNVunTp7E+0N27cqNjYWHXv3l1ubm7Zff9ZfIHzKVKkiFJSUpSRkZG93e7ffy5UqJBNXz7tdH6rV6++6b5NmzbNwyQAHCW3NVZw+4qJiVHdunVVsWJFDRs2LHsq7759+/Tmm29q//792rJlC9M7gVtEYQWAQzVv3vym+plMJq1cuTKP0yCvzZkz56b78mknABQ8f+8KRGHlzrFlyxb17NlTe/futRltWKVKFc2aNUt33323wQkB50NhBQAAXFdsbKzKlClz0/1PnDihkiVL5mEiAI7EiJU7144dO3TgwAFZrVbdddddqlWrltGRAKdFYQUA8J+dPn1ap0+flsVisWm/3naOcB7FixdXp06d1Ldv3+t+innhwgV98803mjlzpvr3769Bgwblc0oAAADjsCsQAIe6cuWK3n77bf3++++5vtHetm2bQcmQF7Zu3aoePXooKipK/6zTs4Dp7WHv3r2aMGGCWrduLU9PT9WtW1chISHy9PTU+fPntXfvXu3Zs0d16tTR66+/rg4dOhgdGQAAIF8xYgWAQ3Xr1k3Lli3TI488ouLFi+fYvvGVV14xKBnyQs2aNVW+fHmNHDky1/tdtmxZg5LB0S5fvqyff/5Za9eu1dGjR3X58mUVK1ZMtWvXVtu2bVWtWjWjIwIAABiCwgoAh/Lz89OSJUvUsGFDo6MgH/j4+Gj79u3sHgAAAIA7ltnoAABuLyVLlpSPj4/RMZBPWrZsqcjISKNjAAAAAIZhxAoAh/rll1/01ltv6YMPPmAayB3g7Nmz6tGjh+rVq6dq1arJzc3N5njHjh0NSgZH6dy58033XbhwYR4mAQA40po1a/Thhx8qJiZGCxYsUMmSJfX5558rNDRUjRo1Mjoe4FRYvBaAQ0VEROjKlSsKCwuTt7d3jjfaCQkJBiVDXtiwYYPWrVunX375JccxFq+9Pfj5+WX/2Wq16vvvv5efn58iIiIkZS1gnJiYeEsFGACAsb777js99dRT6tatm7Zv367U1FRJWbu8TZw4UUuWLDE4IeBcGLECwKFatWql2NhY9enTJ9fFTHv06GFQMuSFcuXK6f7779eYMWNUvHhxo+Mgj40cOVIJCQn64IMP5OLiIknKzMzUs88+K19fX73xxhsGJwQA3IzatWtryJAh6t69u3x8fBQZGamwsDBt375d7du3V3x8vNERAadCYQWAQ3l7e2vDhg2qWbOm0VGQD3x8fLRjxw6VL1/e6CjIB4GBgVq7dq0qVqxo0x4dHa0GDRro3LlzBiUDANwKb29v7d27V+XKlbMprBw6dEhVqlTRlStXjI4IOBUWrwXgUJUqVdLly5eNjoF80rlzZ/3+++9Gx0A+ycjI0L59+3K079u3TxaLxYBEAAB7BAcH6+DBgzna165dq7CwMAMSAc6NNVYAONTkyZM1bNgwTZgwQdWrV8+xxoqvr69ByZAX7rrrLo0ePVpr167N9X4PGjTIoGTIC7169VKfPn0UExOjevXqSZI2btyoyZMnq1evXganAwDcrH79+mnw4MH67LPPZDKZdPLkSW3YsEHDhw/XmDFjjI4HOB2mAgFwKLM5ayDcP9dWsVqtLGZ6GwoNDb3uMZPJpEOHDuVjGuQ1i8WiqVOnaubMmYqLi5MklShRQoMHD9awYcOy110BABRsVqtVEydO1KRJk5SSkiJJ8vDw0PDhwzV+/HiD0wHOh8IKAIdavXr1DY83bdo0n5IAyEtJSUmSGIUGAM4sLS1NBw8eVHJysqpUqaLChQsbHQlwShRWAAD/WVpamg4fPqzy5cvL1ZVZprezjIwMrVq1SjExMeratat8fHx08uRJ+fr68gs5ADiJCxcuKDMzUwEBATbtCQkJcnV1pWgO3CIWrwXgcGvWrNGTTz6pBg0a6MSJE5Kkzz//XGvXrjU4GRwtJSVFffr0kbe3t6pWrarY2FhJ0sCBAzV58mSD08HRjh49qurVq+vBBx/UgAEDdObMGUnSlClTNHz4cIPTAQBuVpcuXfTVV1/laP/mm2/UpUsXAxIBzo3CCgCH+u6779S2bVt5eXlp27ZtSk1NlZT1ycjEiRMNTgdHGz16tCIjI7Vq1Sp5enpmt7dq1Upff/21gcmQFwYPHqyIiAidP39eXl5e2e0PPfSQVqxYYWAyAMCt2Lhxo5o3b56jvVmzZtq4caMBiQDnRmEFgEP973//0wcffKCPP/7YZoeYhg0batu2bQYmQ1744Ycf9M4776hRo0Y2CxZXrVpVMTExBiZDXlizZo1efvllubu727SXK1cue3QaAKDgS01NVUZGRo729PR0Xb582YBEgHOjsALAoaKjo9WkSZMc7X5+fkpMTMz/QMhTZ86cUVBQUI72S5cu5dgZCs7PYrHkurPX8ePH5ePjY0AiAIA96tWrp48++ihH+wcffKC6desakAhwbqwwCMChgoODdfDgQZUrV86mfe3atQoLCzMmFPJMRESEfv75Zw0cOFDS1W22P/nkE9WvX9/IaMgDbdq00YwZM7J/GTeZTEpOTtYrr7yiDh06GJwOAHCz/ve//6lVq1aKjIxUy5YtJUkrVqzQ5s2btWzZMoPTAc6HwgoAh5g7d64ef/xx9evXT4MHD9Znn30mk8mkkydPasOGDRo+fLjGjBljdEw4SIsWLbRw4UJNnDhR7du31969e5WRkaGZM2dq7969Wr9+/b9uvQ3n8+abb6pt27aqUqWKrly5oq5du+rAgQMqVqyYvvzyS6PjAQBuUsOGDbVhwwa98cYb+uabb+Tl5aUaNWro008/VXh4uNHxAKfDdssAHMLFxUVxcXEKDAzUxIkTNWnSJKWkpEiSPDw8NHz4cI0fP97glHAUs9ms+Ph4BQUFKSYmRpMnT1ZkZKSSk5NVp04djRw5UtWrVzc6JvJARkaGvvrqK+3cuTP7fnfr1s1mMVsAAIA7CYUVAA5x7RttSUpLS9PBgweVnJysKlWqqHDhwgYnhCP9834DAICCLSkpSb6+vtl/vpG/+wG4ORRWADiE2WzWqVOnFBgYaHQU5AOz2ayVK1cqICDghv1q1KiRT4mQXz7//HN9+OGHOnTokDZs2KCyZctq+vTpCgsL04MPPmh0PADAdfw9ujgoKEhmsznXReatVqtMJlOuC5UDuD7WWAHgMC1btpSr641/rLDl8u2jZcuWulFtnl/Mbj/vv/++xo4dq+eff17/+9//su9vkSJFNGPGDAorAFCAXfuByMqVK9m9D3AgRqwAcAiz2axhw4b965SfV155JZ8SIS+ZzWZt2rTpX0colS1bNp8SIT9UqVJFEydOVKdOneTj46PIyEiFhYVp9+7datasmc6ePWt0RAAAgHzHiBUADjNixAjW3LiDlClThvt9hzl8+LBq166do93Dw0OXLl0yIBEAwB7h4eHq1q2bunXrxi5AgAOYjQ4A4PbAcFLg9hcaGqodO3bkaF+6dKkqV66c/4EAAHZ59tln9fPPP6tSpUq6++67NXPmTMXHxxsdC3BaFFYAOASzCu8sTZs2lbu7u9ExkM+GDh2qAQMG6Ouvv5bVatWmTZs0YcIEjR49Wi+88ILR8QAAN2nIkCHavHmzoqKi1KFDB7377rsqXbq02rRpo7lz5xodD3A6rLECwCGOHj2qMmXKMHIFuM3NmzdPr776qmJiYiRJISEheu2119SnTx+DkwEA/os///xTzzzzjHbu3Mni88AtorACAABuWUpKipKTk1lnBwCc3KZNmzR//nx9/fXXSkpK0gMPPKCvvvrK6FiAU2HxWgAAcEtOnz6t6OhoSVnrK/3b7lAAgIJl//79mjdvnr788ksdPnxYLVq00JQpU9S5c+d/3eERQE6MWAEAADfl4sWLevbZZ/Xll1/KYrFIklxcXPT444/r3XfflZ+fn8EJAQA3w2w26+6771bXrl3VpUsXFS9e3OhIgFNj8VoADpORkaFx48bp+PHjRkeBQTIzM7Vjxw6dP3/e6CjIA3379tXGjRv1888/KzExUYmJifrpp5+0ZcsWPf3000bHAwDcpOjoaG3cuFGDBw+mqAI4ACNWADiUj4+Pdu3apXLlyhkdBfng+eefV/Xq1dWnTx9lZmaqadOmWr9+vby9vfXTTz+pWbNmRkeEAxUqVEi//vqrGjVqZNO+Zs0atWvXTpcuXTIoGQDgViUmJmrBggWKiYnRiBEjFBAQoG3btql48eIqWbKk0fEAp8KIFQAO1aJFC61evdroGMgnCxYsUM2aNSVJixcv1uHDh7Vv3z4NGTJEL730ksHp4GhFixbNdbqPn5+fihQpYkAiAIA9du7cqfDwcE2ZMkVTp05VYmKiJGnhwoUaPXq0seEAJ8TitQAcqn379ho1apR27dqlunXrqlChQjbHO3bsaFAy5IWzZ88qODhYkrRkyRI9+uijuuuuu9S7d2/NnDnT4HRwtJdffllDhw7V559/nn3f4+PjNWLECI0ZM8bgdACAmzVkyBD16tVLr7/+unx8fLLbO3TooK5duxqYDHBOTAUC4FBm8/UHwplMJmVmZuZjGuS1smXL6uOPP1bLli0VGhqq999/X/fdd5/27NmjRo0asdbKbaZ27do6ePCgUlNTVaZMGUlSbGysPDw8FB4ebtN327ZtRkQEANwEPz8/bdu2TeXLl5ePj48iIyMVFhamo0ePqmLFirpy5YrREQGnwogVAA71904huDP06tVLjz32mEqUKCGTyaRWrVpJkjZu3KhKlSoZnA6O1qlTJ6MjAAAcwMPDQ0lJSTna9+/fr8DAQAMSAc6NESsAgP9kwYIFOnbsmB599FGVKlVKkjRnzhz5+/vrwQcfNDgdAAD4p759++rcuXP65ptvFBAQoJ07d8rFxUWdOnVSkyZNNGPGDKMjAk6FwgqA/+ytt95S//795enpqbfeeuuGfQcNGpRPqWCUxMRE+fv7Gx0DeezKlSv6+uuvdenSJbVu3TrHVCAAQMF14cIFPfLII9qyZYsuXryokJAQxcfHq379+lqyZEmONfIA3BiFFQD/WWhoqLZs2aKiRYsqNDT0uv1MJpMOHTqUj8mQ16ZMmaJy5crp8ccflyQ99thj+u6771SiRAktWbJENWrUMDghHGHo0KFKT0/X22+/LUlKS0tTvXr1tHfvXnl7eysjI0PLli1TgwYNDE4KALgVa9eu1c6dO5WcnKw6depkT+kFcGsorAAA7BYaGqp58+apQYMGWr58uR577DF9/fXX+uabbxQbG6tly5YZHREOUK1aNU2cODF7V69Zs2Zp2LBh2r59u8qUKaPevXvr9OnT+vnnnw1OCgAAkP+uv30HADhQVFSUhg8fbnQMOFh8fLxKly4tSfrpp5/02GOPqU2bNnrhhRe0efNmg9PBUWJjY1WlSpXsr5ctW6ZHHnlEZcuWlclk0uDBg7V9+3YDEwIAbpbFYtFnn32m+++/X9WqVVP16tXVsWNHzZ07V3zmDtiHwgqAPHPp0iV9+umnatCggapWraqlS5caHQkOVqRIER07dkyStHTp0uwhxFarla21byNms9nml+0///xT9957b/bX/v7+bK0NAE7AarWqY8eO6tu3r06cOKHq1auratWqOnr0qHr27KmHHnrI6IiAU6KwAsDh1q1bp969e6t48eLq37+/GjRooL1792r37t1GR4ODde7cWV27dlXr1q117tw5tW/fXpK0fft2VahQweB0cJTKlStr8eLFkqQ9e/YoNjZWzZs3zz5+9OhRFS9e3Kh4AICbNHv2bP3xxx9asWKFtm/fri+//FJfffWVIiMj9dtvv2nlypWaO3eu0TEBp0NhBYBDnD59Wq+//roqVaqkRx55RP7+/lq1apXMZrN69+6tSpUqGR0ReWD69Ol67rnnVKVKFS1fvlyFCxeWJMXFxenZZ581OB0c5YUXXtDo0aPVsmVLtWzZUh06dLBZqHrJkiWqV6+egQkBADfjyy+/1IsvvmhTHP9bixYtNGrUKM2bN8+AZIBzY/FaAA7h5eWlRx55RE8++aRat24tszmrbuvm5qbIyEib9RkAOJ8VK1bop59+UnBwsAYOHChvb+/sY6+99pqaNm2qZs2aGRcQAPCvgoODtXTpUtWqVSvX49u3b1f79u0VHx+fv8EAJ0dhBYBDVKpUSampqerataueeuqp7BEqFFZuf59//rk+/PBDHTp0SBs2bFDZsmU1Y8YMhYaG6sEHHzQ6HgAA+Iu7u7uOHj2qEiVK5Hr85MmTCg0NVWpqaj4nA5wbU4EAOMS+ffv0xRdfKC4uTnfffbfq1q2r6dOnS5JMJpPB6ZBX3n//fQ0dOlTt27dXYmJi9oK1/v7+mjFjhrHhAACAjczMTLm6ul73uIuLizIyMvIxEXB7YMQKAIdLTk7Wl19+qVmzZunPP/9U06ZN1bVrV3Xq1EmBgYFGx4MDValSRRMnTlSnTp3k4+OjyMhIhYWFaffu3WrWrJnOnj1rdEQAAPAXs9ms9u3by8PDI9fjqampWrp0KTv7AbeIwgqAPBUVFaVPP/1Un3/+uRISEpSenm50JDiQl5eX9u3bp7Jly9oUVg4cOKAaNWro8uXLRkcEAAB/6dWr1031mzVrVh4nAW4v1x8HBgAOULlyZU2dOlWTJ0/Wjz/+aHQcOFhoaKh27NihsmXL2rQvXbpUlStXNigVAADIDQUTIG9QWAHwn126dEmFChW6YR9XV1d17tz5pvvDOQwdOlQDBgzQlStXZLVatWnTJn355ZeaNGmSPvnkE6PjAQAAAHmOxWsB/GcVKlTQ5MmTFRcXd90+VqtVy5cvV/v27fXWW2/lYzrkpb59+2rKlCl6+eWXlZKSoq5du+r999/XzJkz1aVLF6PjwcFOnTqlp556SiEhIXJ1dZWLi4vNAwAA4E7EGisA/rPo6Gi9+OKL+vnnn1WzZk1FREQoJCREnp6eOn/+vPbu3asNGzbI1dVVo0eP1tNPP82bsNtQSkqKkpOTFRQUZHQU5JH27dsrNjZWzz33nEqUKJFjxy+21wYAAHciCisAHCY2Nlbffvut1qxZo6NHj+ry5csqVqyYateurbZt26p9+/YUVG4zhw8fVkZGhsLDw23aDxw4IDc3N5UrV86YYMgTPj4+WrNmjWrVqmV0FAAAgAKDwgoAwG5NmzZV79691aNHD5v2L774Qp988olWrVplTDDkiSpVqmjevHmqXbu20VEAAAAKDNZYAeAQYWFhOnfunNExkM+2b9+uhg0b5mi/9957tWPHjvwPhDw1Y8YMjRo1SkeOHDE6CgAAQIHBrkAAHOLIkSPKzMw0Ogbymclk0sWLF3O0X7hwgf8fbkOPP/64UlJSVL58eXl7e8vNzc3meEJCgkHJAAAAjENhBQBgtyZNmmjSpEn68ssvs9fPyczM1KRJk9SoUSOD08HRZsyYYXQEAACAAoc1VgA4hNls1pw5c+Tn53fDfh07dsynRMgPe/fuVZMmTeTv76/GjRtLktasWaOkpCStXLlS1apVMzghAAAAkLcorABwCLP535dsMplMTA+5DZ08eVLvvPOOIiMj5eXlpRo1aui5555TQECA0dGQBzIzM/XDDz8oKipKklS1alV17NiRHb8AAMAdi8IKAIcwm82Kj49XUFCQ0VEA5JGDBw+qQ4cOOnHihCpWrChJio6OVunSpfXzzz+rfPnyBif8//buPqbq8uHj+OecA+dwxOfIhPSnpEDm8CGJJlbmQ1NR+SM0KrUDrBLbMnW6pltm6ZqpI2utpIb4kGumolJkOdOpaeBTwxQ1dSppR0cW4xk6p3P/0X7nHrdFHm7gMni/Nja+13X98dn4Q/fZ9QAAAND6KFYANAubzSa3202x0g6VlZUpOzu7wQ6G9PT0fzwWhn+fxMRE+Xw+bdq0yb8j6ebNm5o+fbqsVqvy8/MNJwQAAGh9FCsAmsXt7Fg5deoUd260MceOHdO4cePkdDoVHx8vSTp69Khqamq0e/duPfjgg4YTojmFhoaqoKBAsbGxDcaLioo0YsQIVVZWGkoGAABgzj9figAAt8HlcsnpdN4yXlFRoY8++kjx8fEaPHiwgWRoSXPnzlVSUpIuX76s3Nxc5ebm6tKlS5o0aZLmzJljOh6amcPh+MvntSsrK2W32w0kAgAAMI8dKwBaxIEDB5Sdna1t27YpIiJCTz75pJKTk/XQQw+ZjoZm5HQ69f333+v+++9vMF5cXKy4uDhVV1cbSoaW8Nxzz+nEiRPKzs7271AqLCzUCy+8oGHDhmndunVmAwIAABgQZDoAgLbj+vXrWrdunbKzs1VeXq6nnnpKdXV12rFjhx544AHT8dACOnfurJKSkluKlZ9++kmdOnUylAot5b333pPL5dLw4cMVHBwsSfJ4PEpKStK7775rOB0AAIAZ7FgB0CwmT56sAwcOaOLEiZo2bZrGjx8vm82m4OBgFRUVUay0UbNnz9b27du1atUqJSQkSJIOHTqkBQsWKDk5WatXrzYbEC3i/PnzOnv2rCRpwIAB6t+/v+FEAAAA5lCsAGgWQUFBmj17tmbNmqWoqCj/OMVK21ZfX68FCxZozZo18ng8kv78m8+aNUvLly+Xw+EwnBAAAABoWRQrAJpFQUGBsrOztXnzZg0YMEAzZszQ008/rfDwcIqVNsrr9erQoUOKjY2Vw+HQxYsXJUn9+vVThw4dDKdDc5k3b56WLl2q0NBQzZs3r9G1mZmZrZQKAADgzkGxAqBZVVVVafPmzVq7dq2OHDkir9erzMxMpaenc+dGGxQSEqIzZ84oMjLSdBS0kFGjRmn79u3q2rWrRo0a1ejaffv2tVIqAACAOwfFCoAWc+7cOWVnZ2vjxo0qKyvTE088oby8PNOx0Izi4uL09ttva8yYMaajAAAAAEZYTQcA0HbFxMRoxYoVunr1qj799FPTcdACli1bpvnz5+uLL76Q2+1WeXl5gx+0Lenp6aqoqLhlvKqqSunp6QYSAQAAmMeOFQBAk1mt/9vPWywW/+8+n08Wi0Ver9dELLQQm80mt9utHj16NBj/5Zdf1LNnT/8FxgAAAO1JkOkAAIB/L+7UaB/Ky8vl8/nk8/lUUVGhkJAQ/5zX69WXX355S9kCAADQXlCsAACaxOfzKSIiQvX19YqJiVFQEP+ktFVdu3aVxWKRxWJRdHT0LfMWi0VvvPGGgWQAAADmcRQIABCwS5cuKSkpScXFxZKkXr16adu2bYqLizOcDC1h//798vl8Gj16tLZt26bu3bv75+x2u/r06aOIiAiDCQEAAMyhWAEABGzKlCk6ffq0Fi9erJCQEK1atUq1tbU6fvy46WhoQVeuXFHv3r0b3K0DAADQ3lGsAAAC1rNnT23dulWPPPKIJMntdqtXr14qLy9XaGio4XRoadXV1SopKVF9fX2D8UGDBhlKBAAAYA7FCgAgYFarVW63W/fcc49/rGPHjvrhhx8UGRlpMBlaUmlpqdLS0rRr166/nOcVKAAA0B6xlxcAEDCLxaLKykqVl5f7f6xWqyoqKhqMoW2ZM2eOysrKVFhYKKfTqa+++krr169XVFSU8vLyTMcDAAAwgh0rAICAWa1WWSyWBmM+n88/9t/f2cHQtoSHh2vnzp2Kj49X586ddezYMUVHRysvL08rVqzQt99+azoiAABAq+NtTABAwPbt22c6AgyoqqpSjx49JEndunVTaWmpoqOjFRsbqxMnThhOBwAAYAbFCgAgYCNHjjQdAQbExMTo3Llz6tu3rwYPHqysrCz17dtXa9asUXh4uOl4AAAARnAUCAAQkKqqqoBe/gl0Pe5cn3zyiTwej1JTU3X8+HGNHz9ev/76q+x2u9atW6eUlBTTEQEAAFodxQoAICDh4eF65ZVX5HK5/naXgs/n0549e5SZmanHHntMCxcubOWUaA3V1dU6e/as/vOf/ygsLMx0HAAAACMoVgAAATl37pwWLVqk/Px8DR48WHFxcYqIiFBISIh+++03FRcX67vvvlNQUJAWLlyomTNnymazmY6NZvDmm29q/vz56tChQ4PxmpoarVy5UosXLzaUDAAAwByKFQBAk5SUlGjLli06ePCgrly5opqaGoWFhWno0KEaN26cJkyYQKHSxthsNrndbv8Ftv918+ZN9ejRg1egAABAu0SxAgAAbovVatWNGzd09913Nxjfu3evUlJSVFpaaigZAACAObwKBAAI2H333aejR4/qrrvuMh0FraBbt26yWCyyWCyKjo6WxWLxz3m9XlVWViojI8NgQgAAAHPYsQIACJjVbV9M4AAABwBJREFUatX169dvORKCtmn9+vXy+XxKT0/X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\n"},"metadata":{}}]},{"cell_type":"code","source":["#List of considered featur\n","parametes = list(data.columns)\n","parametes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cTkB363EPlDp","executionInfo":{"status":"ok","timestamp":1689571528681,"user_tz":-330,"elapsed":515,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}},"outputId":"7132585e-0ed9-4315-8f66-42425b8bd179"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['AT(Air Temperature)',\n"," 'PT(Process Temperature)',\n"," 'RS(Rotation Speed(per min))',\n"," 'Torque',\n"," 'Tool wear',\n"," 'Device Condition']"]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["**SPLITTING DATASET INTO TEST AND TRAIN DATA**"],"metadata":{"id":"KnyQpovwTLZD"}},{"cell_type":"code","source":["X = data.iloc[:,:-1]\n","y = data.iloc[:,-1]\n","X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.25,stratify=y,random_state=42)"],"metadata":{"id":"vuBamx71N1FZ","executionInfo":{"status":"ok","timestamp":1689571535729,"user_tz":-330,"elapsed":697,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}}},"execution_count":22,"outputs":[]},{"cell_type":"markdown","source":["**K-Nearest Neighbour Algorithm**"],"metadata":{"id":"eXby1cQ4XlLI"}},{"cell_type":"code","source":["from sklearn.neighbors import KNeighborsClassifier\n","model = KNeighborsClassifier(n_neighbors=3).fit(X_train,y_train)\n","y_pred = model.predict(X_test)"],"metadata":{"id":"Oj_bGjvRXkOz","executionInfo":{"status":"ok","timestamp":1689571819870,"user_tz":-330,"elapsed":685,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["print(\"Classification Report:\")\n","print(classification_report(y_test, y_pred))\n","\n","# Confusion matrix\n","print(\"Confusion Matrix:\")\n","print(confusion_matrix(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OgRpWIKPXuPj","executionInfo":{"status":"ok","timestamp":1689524538430,"user_tz":-330,"elapsed":671,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}},"outputId":"93bd2e67-b830-4309-e320-f084561b8316"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["Classification Report:\n","              precision    recall  f1-score   support\n","\n","           0       0.86      0.80      0.83       115\n","           1       0.75      0.82      0.79        85\n","\n","    accuracy                           0.81       200\n","   macro avg       0.81      0.81      0.81       200\n","weighted avg       0.81      0.81      0.81       200\n","\n","Confusion Matrix:\n","[[92 23]\n"," [15 70]]\n"]}]},{"cell_type":"markdown","source":["**Artificial Neural Network Model**"],"metadata":{"id":"MmGXBJhaTexi"}},{"cell_type":"code","source":["model = tf.keras.Sequential([\n","  tf.keras.layers.Dense(128, activation=\"relu\"),\n","  tf.keras.layers.Dense(64, activation=\"relu\"),\n","  tf.keras.layers.Dense(1, activation=\"sigmoid\")\n","])\n","model.compile(optimizer=\"adam\", loss=\"binary_crossentropy\", metrics=[\"accuracy\"])"],"metadata":{"id":"dbhTBWxhKkiY","executionInfo":{"status":"ok","timestamp":1689572141244,"user_tz":-330,"elapsed":417,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}}},"execution_count":24,"outputs":[]},{"cell_type":"markdown","source":["**FITTING DATA INTO THE MODEL**"],"metadata":{"id":"CpvKP2eZTkEd"}},{"cell_type":"code","source":["model.fit(X_train, y_train, batch_size=10, epochs=90)\n","y_pred = model.predict(X_test)\n","threshold = 0.5\n","y_pred = np.where(np.array(y_pred) >= threshold, 1, 0)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"STo6ua9Dk9Gj","outputId":"1c4eb9cd-210f-4e0f-bb52-f65aa6538bc5","executionInfo":{"status":"ok","timestamp":1689572171281,"user_tz":-330,"elapsed":22239,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}}},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/90\n","60/60 [==============================] - 1s 3ms/step - loss: 7.1690 - accuracy: 0.5533\n","Epoch 2/90\n","60/60 [==============================] - 0s 3ms/step - loss: 1.3084 - accuracy: 0.7100\n","Epoch 3/90\n","60/60 [==============================] - 0s 3ms/step - loss: 1.0080 - accuracy: 0.7233\n","Epoch 4/90\n","60/60 [==============================] - 0s 3ms/step - loss: 2.8216 - accuracy: 0.6283\n","Epoch 5/90\n","60/60 [==============================] - 0s 3ms/step - loss: 1.6350 - accuracy: 0.6850\n","Epoch 6/90\n","60/60 [==============================] - 0s 3ms/step - loss: 1.3830 - accuracy: 0.6917\n","Epoch 7/90\n","60/60 [==============================] - 0s 3ms/step - loss: 1.0451 - accuracy: 0.7450\n","Epoch 8/90\n","60/60 [==============================] - 0s 3ms/step - loss: 1.3140 - accuracy: 0.7267\n","Epoch 9/90\n","60/60 [==============================] - 0s 3ms/step - loss: 0.8241 - accuracy: 0.7717\n","Epoch 10/90\n","60/60 [==============================] - 0s 3ms/step - loss: 1.3932 - accuracy: 0.7217\n","Epoch 11/90\n","60/60 [==============================] - 0s 3ms/step - loss: 1.0411 - accuracy: 0.7517\n","Epoch 12/90\n","60/60 [==============================] - 0s 3ms/step - loss: 1.4117 - accuracy: 0.7350\n","Epoch 13/90\n","60/60 [==============================] - 0s 5ms/step - loss: 0.8051 - accuracy: 0.7850\n","Epoch 14/90\n","60/60 [==============================] - 0s 5ms/step - loss: 1.0291 - accuracy: 0.7517\n","Epoch 15/90\n","60/60 [==============================] - 0s 5ms/step - loss: 1.3423 - accuracy: 0.7300\n","Epoch 16/90\n","60/60 [==============================] - 0s 5ms/step - loss: 1.5528 - accuracy: 0.7217\n","Epoch 17/90\n","60/60 [==============================] - 0s 5ms/step - loss: 1.8575 - accuracy: 0.7350\n","Epoch 18/90\n","60/60 [==============================] - 0s 5ms/step - loss: 1.1150 - accuracy: 0.7850\n","Epoch 19/90\n","60/60 [==============================] - 0s 4ms/step - loss: 1.0894 - accuracy: 0.7767\n","Epoch 20/90\n","60/60 [==============================] - 0s 5ms/step - loss: 0.8127 - accuracy: 0.7933\n","Epoch 21/90\n","60/60 [==============================] - 0s 6ms/step - loss: 1.8620 - accuracy: 0.7083\n","Epoch 22/90\n","60/60 [==============================] - 0s 4ms/step - loss: 1.6654 - accuracy: 0.7317\n","Epoch 23/90\n","60/60 [==============================] - 0s 4ms/step - loss: 1.8234 - accuracy: 0.7217\n","Epoch 24/90\n","60/60 [==============================] - 0s 3ms/step - loss: 1.4178 - accuracy: 0.7450\n","Epoch 25/90\n","60/60 [==============================] - 0s 4ms/step - loss: 0.7685 - accuracy: 0.8000\n","Epoch 26/90\n","60/60 [==============================] - 0s 3ms/step - loss: 0.5666 - accuracy: 0.8033\n","Epoch 27/90\n","60/60 [==============================] - 0s 2ms/step - loss: 1.0478 - accuracy: 0.7633\n","Epoch 28/90\n","60/60 [==============================] - 0s 2ms/step - loss: 1.0718 - accuracy: 0.7600\n","Epoch 29/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.6851 - accuracy: 0.7950\n","Epoch 30/90\n","60/60 [==============================] - 0s 2ms/step - loss: 1.3990 - accuracy: 0.7450\n","Epoch 31/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.8980 - accuracy: 0.7750\n","Epoch 32/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.9558 - accuracy: 0.7550\n","Epoch 33/90\n","60/60 [==============================] - 0s 2ms/step - loss: 1.0497 - accuracy: 0.7583\n","Epoch 34/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.9538 - accuracy: 0.7717\n","Epoch 35/90\n","60/60 [==============================] - 0s 2ms/step - loss: 1.0035 - accuracy: 0.7500\n","Epoch 36/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.6980 - accuracy: 0.7883\n","Epoch 37/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.6945 - accuracy: 0.8033\n","Epoch 38/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.9094 - accuracy: 0.7667\n","Epoch 39/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.6777 - accuracy: 0.7850\n","Epoch 40/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.5541 - accuracy: 0.8300\n","Epoch 41/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.6479 - accuracy: 0.7883\n","Epoch 42/90\n","60/60 [==============================] - 0s 2ms/step - loss: 2.5339 - accuracy: 0.6400\n","Epoch 43/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.8431 - accuracy: 0.8050\n","Epoch 44/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.5903 - accuracy: 0.8050\n","Epoch 45/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.5068 - accuracy: 0.8150\n","Epoch 46/90\n","60/60 [==============================] - 0s 2ms/step - loss: 1.0720 - accuracy: 0.7433\n","Epoch 47/90\n","60/60 [==============================] - 0s 2ms/step - loss: 1.0268 - accuracy: 0.7400\n","Epoch 48/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.5916 - accuracy: 0.8083\n","Epoch 49/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.7079 - accuracy: 0.7967\n","Epoch 50/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.5218 - accuracy: 0.8233\n","Epoch 51/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.4724 - accuracy: 0.8533\n","Epoch 52/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.5854 - accuracy: 0.8000\n","Epoch 53/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.8126 - accuracy: 0.7800\n","Epoch 54/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.4610 - accuracy: 0.8400\n","Epoch 55/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.7322 - accuracy: 0.7800\n","Epoch 56/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.7901 - accuracy: 0.7950\n","Epoch 57/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.8818 - accuracy: 0.7700\n","Epoch 58/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.5973 - accuracy: 0.8100\n","Epoch 59/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.6973 - accuracy: 0.7733\n","Epoch 60/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.6184 - accuracy: 0.7933\n","Epoch 61/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.4806 - accuracy: 0.8300\n","Epoch 62/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.5923 - accuracy: 0.8067\n","Epoch 63/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.4726 - accuracy: 0.8250\n","Epoch 64/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.5382 - accuracy: 0.8250\n","Epoch 65/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.6213 - accuracy: 0.7800\n","Epoch 66/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.4782 - accuracy: 0.8267\n","Epoch 67/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.7350 - accuracy: 0.7683\n","Epoch 68/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.4957 - accuracy: 0.8300\n","Epoch 69/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.8527 - accuracy: 0.7567\n","Epoch 70/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.4698 - accuracy: 0.8183\n","Epoch 71/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.5825 - accuracy: 0.7833\n","Epoch 72/90\n","60/60 [==============================] - 0s 2ms/step - loss: 0.4380 - accuracy: 0.8400\n","Epoch 73/90\n","60/60 [==============================] - 0s 3ms/step - loss: 0.5676 - accuracy: 0.8000\n","Epoch 74/90\n","60/60 [==============================] - 0s 3ms/step - loss: 0.4424 - accuracy: 0.8367\n","Epoch 75/90\n","60/60 [==============================] - 0s 3ms/step - loss: 0.4205 - accuracy: 0.8483\n","Epoch 76/90\n","60/60 [==============================] - 0s 3ms/step - loss: 0.5595 - accuracy: 0.7883\n","Epoch 77/90\n","60/60 [==============================] - 0s 3ms/step - loss: 0.4601 - accuracy: 0.8267\n","Epoch 78/90\n","60/60 [==============================] - 0s 3ms/step - loss: 0.5286 - accuracy: 0.8033\n","Epoch 79/90\n","60/60 [==============================] - 0s 5ms/step - loss: 0.6812 - accuracy: 0.7850\n","Epoch 80/90\n","60/60 [==============================] - 0s 3ms/step - loss: 0.7426 - accuracy: 0.7767\n","Epoch 81/90\n","60/60 [==============================] - 0s 4ms/step - loss: 0.5599 - accuracy: 0.8200\n","Epoch 82/90\n","60/60 [==============================] - 0s 3ms/step - loss: 0.4752 - accuracy: 0.8417\n","Epoch 83/90\n","60/60 [==============================] - 0s 5ms/step - loss: 0.4396 - accuracy: 0.8183\n","Epoch 84/90\n","60/60 [==============================] - 0s 3ms/step - loss: 0.7121 - accuracy: 0.7750\n","Epoch 85/90\n","60/60 [==============================] - 0s 3ms/step - loss: 0.4578 - accuracy: 0.8200\n","Epoch 86/90\n","60/60 [==============================] - 0s 6ms/step - loss: 0.6202 - accuracy: 0.7867\n","Epoch 87/90\n","60/60 [==============================] - 0s 6ms/step - loss: 0.4592 - accuracy: 0.8117\n","Epoch 88/90\n","60/60 [==============================] - 0s 5ms/step - loss: 0.4465 - accuracy: 0.8300\n","Epoch 89/90\n","60/60 [==============================] - 0s 6ms/step - loss: 0.4885 - accuracy: 0.8100\n","Epoch 90/90\n","60/60 [==============================] - 0s 5ms/step - loss: 0.5238 - accuracy: 0.8017\n","7/7 [==============================] - 0s 2ms/step\n"]}]},{"cell_type":"markdown","source":["**ACCURACY OF THE MODEL**"],"metadata":{"id":"wKnDe22mUQ0E"}},{"cell_type":"code","source":["score = accuracy_score(y_test, y_pred)\n","score"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bhkYJQ6iurx8","outputId":"51d5791e-ef01-4a70-f49a-720c2b24bfe1","executionInfo":{"status":"ok","timestamp":1689572282354,"user_tz":-330,"elapsed":8,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}}},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.735"]},"metadata":{},"execution_count":26}]},{"cell_type":"markdown","source":["**CLASSIFICATION REPORT**"],"metadata":{"id":"7llbVfG4UUGk"}},{"cell_type":"code","source":["print(\"Classification Report:\")\n","print(classification_report(y_test, y_pred))\n","\n","# Confusion matrix\n","print(\"Confusion Matrix:\")\n","print(confusion_matrix(y_test, y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d4MUPw82hAco","outputId":"202828c5-4e7b-4e67-ad20-f774c1207b1b","executionInfo":{"status":"ok","timestamp":1689572287064,"user_tz":-330,"elapsed":527,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}}},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["Classification Report:\n","              precision    recall  f1-score   support\n","\n","           0       0.98      0.55      0.70       115\n","           1       0.62      0.99      0.76        85\n","\n","    accuracy                           0.73       200\n","   macro avg       0.80      0.77      0.73       200\n","weighted avg       0.83      0.73      0.73       200\n","\n","Confusion Matrix:\n","[[63 52]\n"," [ 1 84]]\n"]}]},{"cell_type":"code","source":["con_mat_df = pd.DataFrame(confusion_matrix(y_test,y_pred))\n","figure = plt.figure(figsize=(2, 2))\n","sns.heatmap(con_mat_df, annot=True,fmt='d')\n","plt.tight_layout()\n","plt.ylabel('Actual')\n","plt.xlabel('Predicted')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"dlOw5sgZQJAt","executionInfo":{"status":"ok","timestamp":1689572344507,"user_tz":-330,"elapsed":1929,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}},"outputId":"20d83b86-5317-47be-d7ee-49858628445d"},"execution_count":28,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 200x200 with 2 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"markdown","source":["**SAVING MODEL**"],"metadata":{"id":"3vztQRA1Uaia"}},{"cell_type":"code","source":["model.save('model1.h5')"],"metadata":{"id":"lFZmMIsMvkSq","executionInfo":{"status":"ok","timestamp":1689524699837,"user_tz":-330,"elapsed":8,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}}},"execution_count":32,"outputs":[]},{"cell_type":"markdown","source":["**TESTING MODEL WITH NEW DATA POINTS**"],"metadata":{"id":"QU1GPh72Uf60"}},{"cell_type":"code","source":["y_2=[[298.2,308.7,1408.0,40.0,9]]"],"metadata":{"id":"4rcakqiOxoOb","executionInfo":{"status":"ok","timestamp":1689572389165,"user_tz":-330,"elapsed":514,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["y_pre = model.predict(y_2)\n","threshold = 0.5\n","y_pre = np.where(np.array(y_pre) >= threshold, 1, 0)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RZlPPipSyNBV","outputId":"1e547086-bfcc-479d-df08-1fe57ed9bed7","executionInfo":{"status":"ok","timestamp":1689572391925,"user_tz":-330,"elapsed":683,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}}},"execution_count":30,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 87ms/step\n"]}]},{"cell_type":"markdown","source":["**PREDICTED VALUE**"],"metadata":{"id":"yRB9FSUHUwkh"}},{"cell_type":"code","source":["y_pre"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-dbo6r29yPQ5","outputId":"c2c3fc0f-d486-46f9-fb39-55385c35e439","executionInfo":{"status":"ok","timestamp":1689572404605,"user_tz":-330,"elapsed":497,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}}},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1]])"]},"metadata":{},"execution_count":31}]},{"cell_type":"markdown","source":["**DUMPING MODEL USING PICKLE MODULE**"],"metadata":{"id":"1I0xCdbaU1Sy"}},{"cell_type":"code","source":["pickle.dump(model,open('model.pkl','wb'))"],"metadata":{"id":"ovjruuGAzeeN","executionInfo":{"status":"ok","timestamp":1689572421416,"user_tz":-330,"elapsed":1125,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["model=pickle.load(open('model.pkl','rb'))"],"metadata":{"id":"9y1aZDIwO7Cf","executionInfo":{"status":"ok","timestamp":1689572463111,"user_tz":-330,"elapsed":485,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}}},"execution_count":33,"outputs":[]},{"cell_type":"markdown","source":["**TESTING SAVED MODEL**"],"metadata":{"id":"eTjC2TAeU8W7"}},{"cell_type":"code","source":["model.predict([[298.1,308.6,1551,42.8,0]])"],"metadata":{"id":"nRs7072BPFjK","colab":{"base_uri":"https://localhost:8080/"},"outputId":"78993dfa-8c88-4eb7-df9d-e2b6aa31efb9","executionInfo":{"status":"ok","timestamp":1689578833730,"user_tz":-330,"elapsed":427,"user":{"displayName":"platformofknowledge","userId":"13557914821869027746"}}},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 69ms/step\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[0.18966593]], dtype=float32)"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":[],"metadata":{"id":"4T5q-1TxhZ-H"},"execution_count":null,"outputs":[]}]}